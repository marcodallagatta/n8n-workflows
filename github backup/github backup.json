{
  "nodes": [
    {
      "parameters": {},
      "id": "7aeeabad-8c10-4d42-b99e-c33da39c1ba4",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2304,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "16211878-9e8a-45e2-bc94-a4653e68926d",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e96757c3-ae16-44e7-bb5d-ed6cf4939402",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        0,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "971d3d2f-1d44-4dc4-bb42-6be7d06ac060",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        0,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=update: n8n backup {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "f5dfa3cd-b7e4-457c-9428-1dd836ef205e",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        192,
        240
      ],
      "typeVersion": 1,
      "webhookId": "REDACTED_WEBHOOK_ID"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=Add: n8n backup file named {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "451f6ad8-d3e3-4cea-8eea-b2247b042171",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        192,
        464
      ],
      "typeVersion": 1,
      "webhookId": "REDACTED_WEBHOOK_ID"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "7c9f498d-f97b-4743-890b-2bbf8a7f01b5",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1280,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner"
            },
            {
              "name": "repo.name"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "fc095e0a-39ac-43b6-ae8c-560851915e0a",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -2112,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "310fc4cf-17b9-4983-8f9b-e4bcc9efc6b1",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -480,
        256
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "fa07876c-2f3a-425f-9785-13e3cc992757",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -656,
        256
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "49ffa0e4-3052-48a4-bee6-4e9352f51524",
      "name": "check_github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        -240,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "e6b58f98-f454-4655-bd37-847e798af393",
      "name": "Get a file",
      "type": "n8n-nodes-base.github",
      "position": [
        -880,
        208
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "REDACTED_WEBHOOK_ID",
      "continueOnFail": true
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 6
            }
          ]
        }
      },
      "id": "e2221e45-fc24-45df-a820-4fb43826475a",
      "name": "backup cron",
      "type": "n8n-nodes-base.cron",
      "position": [
        -2304,
        416
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {
          "excludePinnedData": true
        },
        "requestOptions": {}
      },
      "id": "9e5f82a6-2ddb-4bf6-a1ce-13483240ae14",
      "name": "Get many workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -1872,
        384
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "REDACTED_N8N_API_CRED",
          "name": "YOUR_N8N_ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "={{ $json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{ $json.repo.path }}"
      },
      "id": "fe4e40ec-3b12-4e39-9b37-ca7e764a3d71",
      "name": "List GH workflows",
      "type": "n8n-nodes-base.github",
      "position": [
        -1872,
        208
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "REDACTED_WEBHOOK_ID",
      "credentials": {
        "githubApi": {
          "id": "REDACTED_GITHUB_CRED",
          "name": "GitHub YOUR_USERNAME"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "name",
        "joinMode": "keepEverything",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1520,
        288
      ],
      "id": "2d0c6f6b-2619-4b19-8dd0-f22e7379e49d",
      "name": "Merge1"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "delete",
        "owner": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Globals').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$('Globals').item.json.repo.path}}",
        "commitMessage": "delete workflow"
      },
      "id": "97564a95-8fb6-4a0b-bd1e-c3643574776c",
      "name": "Delete a file",
      "type": "n8n-nodes-base.github",
      "position": [
        -880,
        464
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "REDACTED_WEBHOOK_ID",
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "78067e80-8bf2-4ee6-9fc8-c6910027f1c9",
              "leftValue": "={{ $json.isArchived }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1136,
        288
      ],
      "id": "922cdb55-ef49-4e2a-8e07-330371d864f9",
      "name": "is still on n8n"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5cac277-3465-4b12-bbcb-d66defa0e39e",
              "name": "name",
              "value": "={{ $json.name.replace('.json','') }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1712,
        208
      ],
      "id": "a17cba9b-8cc1-4518-a544-e1bda87ea354",
      "name": "Harmonize filename"
    },
    {
      "parameters": {
        "content": "## Change this node",
        "height": 352,
        "width": 192
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2176,
        80
      ],
      "typeVersion": 1,
      "id": "b4bd6311-67eb-4417-841a-361146c6b54d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Change crdential for all Github nodes",
        "height": 320,
        "width": 208
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1936,
        32
      ],
      "typeVersion": 1,
      "id": "e7b4fb7f-2415-4bfb-b0d9-2c48e9f15535",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Create an n8n API key and use it as credential",
        "height": 304,
        "width": 208
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1936,
        368
      ],
      "typeVersion": 1,
      "id": "f8b45e34-c3b1-429c-a5a2-0f856b97cf4a",
      "name": "Sticky Note2"
    }
  ],
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "is still on n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get many workflows",
            "type": "main",
            "index": 0
          },
          {
            "node": "List GH workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "check_github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "backup cron": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many workflows": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "List GH workflows": {
      "main": [
        [
          {
            "node": "Harmonize filename",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete a file": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is still on n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Delete a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Harmonize filename": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "YOUR_INSTANCE_ID"
  }
}
